
LED Matrix with Keypad.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00000120  00000000  00000000  00000054  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000000  00800060  00800060  00000174  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .comment      00000030  00000000  00000000  00000174  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  000001a4  2**2
                  CONTENTS, READONLY
  4 .debug_aranges 00000020  00000000  00000000  000001e0  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   000006ab  00000000  00000000  00000200  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 000005cf  00000000  00000000  000008ab  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   000002da  00000000  00000000  00000e7a  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  00000024  00000000  00000000  00001154  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    00000343  00000000  00000000  00001178  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    00000090  00000000  00000000  000014bb  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000010  00000000  00000000  0000154b  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
   4:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
   8:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
   c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  10:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  14:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  18:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  1c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  20:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  24:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  28:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  2c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  30:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  34:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  38:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  3c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  40:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  44:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  48:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  4c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  50:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>

00000054 <__ctors_end>:
  54:	11 24       	eor	r1, r1
  56:	1f be       	out	0x3f, r1	; 63
  58:	cf e5       	ldi	r28, 0x5F	; 95
  5a:	d4 e0       	ldi	r29, 0x04	; 4
  5c:	de bf       	out	0x3e, r29	; 62
  5e:	cd bf       	out	0x3d, r28	; 61
  60:	0e 94 36 00 	call	0x6c	; 0x6c <main>
  64:	0c 94 8e 00 	jmp	0x11c	; 0x11c <_exit>

00000068 <__bad_interrupt>:
  68:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

0000006c <main>:
#define F_CPU 8000000UL
#include <util/delay.h>

int main(void)
{
	DDRA = 0b00000111;// KEYPAD
  6c:	87 e0       	ldi	r24, 0x07	; 7
  6e:	8a bb       	out	0x1a, r24	; 26
	DDRC = 0b01110111;// LEDs
  70:	87 e7       	ldi	r24, 0x77	; 119
  72:	84 bb       	out	0x14, r24	; 20
	while (1)
	{
		PORTA = 0b00000001;// Set PA0 as +5V
  74:	81 e0       	ldi	r24, 0x01	; 1
  76:	8b bb       	out	0x1b, r24	; 27
		if (PINA & 0b00010000)
  78:	cc 9b       	sbis	0x19, 4	; 25
  7a:	03 c0       	rjmp	.+6      	; 0x82 <main+0x16>
		{
			PORTC = 0b01100100;// D1
  7c:	84 e6       	ldi	r24, 0x64	; 100
  7e:	85 bb       	out	0x15, r24	; 21
  80:	0e c0       	rjmp	.+28     	; 0x9e <main+0x32>
		}
		else if (PINA & 0b00100000)
  82:	cd 9b       	sbis	0x19, 5	; 25
  84:	03 c0       	rjmp	.+6      	; 0x8c <main+0x20>
		{
			PORTC = 0b01010100;// D4
  86:	84 e5       	ldi	r24, 0x54	; 84
  88:	85 bb       	out	0x15, r24	; 21
  8a:	09 c0       	rjmp	.+18     	; 0x9e <main+0x32>
		}
		else if (PINA & 0b01000000)
  8c:	ce 9b       	sbis	0x19, 6	; 25
  8e:	03 c0       	rjmp	.+6      	; 0x96 <main+0x2a>
		{
			PORTC = 0b00110100;// D7
  90:	84 e3       	ldi	r24, 0x34	; 52
  92:	85 bb       	out	0x15, r24	; 21
  94:	04 c0       	rjmp	.+8      	; 0x9e <main+0x32>
		}
		else if (PINA & 0b10000000)
  96:	cf 9b       	sbis	0x19, 7	; 25
  98:	02 c0       	rjmp	.+4      	; 0x9e <main+0x32>
		{
			PORTC = 0b00000111;// all on
  9a:	87 e0       	ldi	r24, 0x07	; 7
  9c:	85 bb       	out	0x15, r24	; 21
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
  9e:	2f e7       	ldi	r18, 0x7F	; 127
  a0:	89 ea       	ldi	r24, 0xA9	; 169
  a2:	93 e0       	ldi	r25, 0x03	; 3
  a4:	21 50       	subi	r18, 0x01	; 1
  a6:	80 40       	sbci	r24, 0x00	; 0
  a8:	90 40       	sbci	r25, 0x00	; 0
  aa:	e1 f7       	brne	.-8      	; 0xa4 <main+0x38>
  ac:	00 c0       	rjmp	.+0      	; 0xae <main+0x42>
  ae:	00 00       	nop
		}
		_delay_ms(150);
		PORTA = 0b00000010;// Set PA2 as +5V
  b0:	82 e0       	ldi	r24, 0x02	; 2
  b2:	8b bb       	out	0x1b, r24	; 27
		if (PINA & 0b00010000)
  b4:	cc 9b       	sbis	0x19, 4	; 25
  b6:	03 c0       	rjmp	.+6      	; 0xbe <main+0x52>
		{
			PORTC = 0b01100010;// D2
  b8:	82 e6       	ldi	r24, 0x62	; 98
  ba:	85 bb       	out	0x15, r24	; 21
  bc:	09 c0       	rjmp	.+18     	; 0xd0 <main+0x64>
		}
		else if (PINA & 0b00100000)
  be:	cd 9b       	sbis	0x19, 5	; 25
  c0:	03 c0       	rjmp	.+6      	; 0xc8 <main+0x5c>
		{
			PORTC = 0b01010010;// D5
  c2:	82 e5       	ldi	r24, 0x52	; 82
  c4:	85 bb       	out	0x15, r24	; 21
  c6:	04 c0       	rjmp	.+8      	; 0xd0 <main+0x64>
		}
		else if (PINA & 0b01000000)
  c8:	ce 9b       	sbis	0x19, 6	; 25
  ca:	02 c0       	rjmp	.+4      	; 0xd0 <main+0x64>
		{
			PORTC = 0b00110010;// D8
  cc:	82 e3       	ldi	r24, 0x32	; 50
  ce:	85 bb       	out	0x15, r24	; 21
  d0:	2f e7       	ldi	r18, 0x7F	; 127
  d2:	89 ea       	ldi	r24, 0xA9	; 169
  d4:	93 e0       	ldi	r25, 0x03	; 3
  d6:	21 50       	subi	r18, 0x01	; 1
  d8:	80 40       	sbci	r24, 0x00	; 0
  da:	90 40       	sbci	r25, 0x00	; 0
  dc:	e1 f7       	brne	.-8      	; 0xd6 <main+0x6a>
  de:	00 c0       	rjmp	.+0      	; 0xe0 <main+0x74>
  e0:	00 00       	nop
		}
		_delay_ms(150);
		PORTA = 0b00000100;// Set PA3 as +5V
  e2:	84 e0       	ldi	r24, 0x04	; 4
  e4:	8b bb       	out	0x1b, r24	; 27
		if (PINA & 0b00010000)
  e6:	cc 9b       	sbis	0x19, 4	; 25
  e8:	03 c0       	rjmp	.+6      	; 0xf0 <main+0x84>
		{
			PORTC = 0b01100001;// D3
  ea:	81 e6       	ldi	r24, 0x61	; 97
  ec:	85 bb       	out	0x15, r24	; 21
  ee:	0c c0       	rjmp	.+24     	; 0x108 <main+0x9c>
		}
		else if (PINA & 0b00100000)
  f0:	cd 9b       	sbis	0x19, 5	; 25
  f2:	03 c0       	rjmp	.+6      	; 0xfa <main+0x8e>
		{
			PORTC = 0b01010001;// D6
  f4:	81 e5       	ldi	r24, 0x51	; 81
  f6:	85 bb       	out	0x15, r24	; 21
  f8:	07 c0       	rjmp	.+14     	; 0x108 <main+0x9c>
		}
		else if (PINA & 0b01000000)
  fa:	ce 9b       	sbis	0x19, 6	; 25
  fc:	03 c0       	rjmp	.+6      	; 0x104 <main+0x98>
		{
			PORTC = 0b00110001;// D9
  fe:	81 e3       	ldi	r24, 0x31	; 49
 100:	85 bb       	out	0x15, r24	; 21
 102:	02 c0       	rjmp	.+4      	; 0x108 <main+0x9c>
		}
		else if (PINA & 0b10000000)
 104:	cf 99       	sbic	0x19, 7	; 25
		{
			PORTC = 0b00000000;// all off
 106:	15 ba       	out	0x15, r1	; 21
 108:	2f e7       	ldi	r18, 0x7F	; 127
 10a:	89 ea       	ldi	r24, 0xA9	; 169
 10c:	93 e0       	ldi	r25, 0x03	; 3
 10e:	21 50       	subi	r18, 0x01	; 1
 110:	80 40       	sbci	r24, 0x00	; 0
 112:	90 40       	sbci	r25, 0x00	; 0
 114:	e1 f7       	brne	.-8      	; 0x10e <main+0xa2>
 116:	00 c0       	rjmp	.+0      	; 0x118 <main+0xac>
 118:	00 00       	nop
 11a:	ac cf       	rjmp	.-168    	; 0x74 <main+0x8>

0000011c <_exit>:
 11c:	f8 94       	cli

0000011e <__stop_program>:
 11e:	ff cf       	rjmp	.-2      	; 0x11e <__stop_program>
